//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace TWNewEgg.ECWeb.AllPayCredic {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="creditcardSoap", Namespace="http://PaymentCenter.AllPay.com.tw/")]
    public partial class creditcard : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateTradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyOrderByOtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendOtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlatformQueryTradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPeriodTradeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public creditcard() {
            this.Url = global::TWNewEgg.ECWeb.Properties.Settings.Default.TWNewEgg_ECWeb_AllPayCredic_creditcard;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateTradeCompletedEventHandler CreateTradeCompleted;
        
        /// <remarks/>
        public event VerifyOrderByOtpCompletedEventHandler VerifyOrderByOtpCompleted;
        
        /// <remarks/>
        public event ResendOtpCompletedEventHandler ResendOtpCompleted;
        
        /// <remarks/>
        public event QueryTradeCompletedEventHandler QueryTradeCompleted;
        
        /// <remarks/>
        public event PlatformQueryTradeCompletedEventHandler PlatformQueryTradeCompleted;
        
        /// <remarks/>
        public event QueryPeriodTradeCompletedEventHandler QueryPeriodTradeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/CreateTrade", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTrade(long merchantID, string xmlData) {
            object[] results = this.Invoke("CreateTrade", new object[] {
                        merchantID,
                        xmlData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTradeAsync(long merchantID, string xmlData) {
            this.CreateTradeAsync(merchantID, xmlData, null);
        }
        
        /// <remarks/>
        public void CreateTradeAsync(long merchantID, string xmlData, object userState) {
            if ((this.CreateTradeOperationCompleted == null)) {
                this.CreateTradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTradeOperationCompleted);
            }
            this.InvokeAsync("CreateTrade", new object[] {
                        merchantID,
                        xmlData}, this.CreateTradeOperationCompleted, userState);
        }
        
        private void OnCreateTradeOperationCompleted(object arg) {
            if ((this.CreateTradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTradeCompleted(this, new CreateTradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/VerifyOrderByOtp", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerifyOrderByOtp(long merchantID, string xmlData) {
            object[] results = this.Invoke("VerifyOrderByOtp", new object[] {
                        merchantID,
                        xmlData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyOrderByOtpAsync(long merchantID, string xmlData) {
            this.VerifyOrderByOtpAsync(merchantID, xmlData, null);
        }
        
        /// <remarks/>
        public void VerifyOrderByOtpAsync(long merchantID, string xmlData, object userState) {
            if ((this.VerifyOrderByOtpOperationCompleted == null)) {
                this.VerifyOrderByOtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyOrderByOtpOperationCompleted);
            }
            this.InvokeAsync("VerifyOrderByOtp", new object[] {
                        merchantID,
                        xmlData}, this.VerifyOrderByOtpOperationCompleted, userState);
        }
        
        private void OnVerifyOrderByOtpOperationCompleted(object arg) {
            if ((this.VerifyOrderByOtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyOrderByOtpCompleted(this, new VerifyOrderByOtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/ResendOtp", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResendOtp(long merchantID, string xmlData) {
            object[] results = this.Invoke("ResendOtp", new object[] {
                        merchantID,
                        xmlData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResendOtpAsync(long merchantID, string xmlData) {
            this.ResendOtpAsync(merchantID, xmlData, null);
        }
        
        /// <remarks/>
        public void ResendOtpAsync(long merchantID, string xmlData, object userState) {
            if ((this.ResendOtpOperationCompleted == null)) {
                this.ResendOtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendOtpOperationCompleted);
            }
            this.InvokeAsync("ResendOtp", new object[] {
                        merchantID,
                        xmlData}, this.ResendOtpOperationCompleted, userState);
        }
        
        private void OnResendOtpOperationCompleted(object arg) {
            if ((this.ResendOtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendOtpCompleted(this, new ResendOtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/QueryTrade", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryTrade(long merchantID, string merchantTradeNo) {
            object[] results = this.Invoke("QueryTrade", new object[] {
                        merchantID,
                        merchantTradeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTradeAsync(long merchantID, string merchantTradeNo) {
            this.QueryTradeAsync(merchantID, merchantTradeNo, null);
        }
        
        /// <remarks/>
        public void QueryTradeAsync(long merchantID, string merchantTradeNo, object userState) {
            if ((this.QueryTradeOperationCompleted == null)) {
                this.QueryTradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTradeOperationCompleted);
            }
            this.InvokeAsync("QueryTrade", new object[] {
                        merchantID,
                        merchantTradeNo}, this.QueryTradeOperationCompleted, userState);
        }
        
        private void OnQueryTradeOperationCompleted(object arg) {
            if ((this.QueryTradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTradeCompleted(this, new QueryTradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/PlatformQueryTrade", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlatformQueryTrade(long merchantID, string merchantTradeNo, long PlatformID) {
            object[] results = this.Invoke("PlatformQueryTrade", new object[] {
                        merchantID,
                        merchantTradeNo,
                        PlatformID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlatformQueryTradeAsync(long merchantID, string merchantTradeNo, long PlatformID) {
            this.PlatformQueryTradeAsync(merchantID, merchantTradeNo, PlatformID, null);
        }
        
        /// <remarks/>
        public void PlatformQueryTradeAsync(long merchantID, string merchantTradeNo, long PlatformID, object userState) {
            if ((this.PlatformQueryTradeOperationCompleted == null)) {
                this.PlatformQueryTradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlatformQueryTradeOperationCompleted);
            }
            this.InvokeAsync("PlatformQueryTrade", new object[] {
                        merchantID,
                        merchantTradeNo,
                        PlatformID}, this.PlatformQueryTradeOperationCompleted, userState);
        }
        
        private void OnPlatformQueryTradeOperationCompleted(object arg) {
            if ((this.PlatformQueryTradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlatformQueryTradeCompleted(this, new PlatformQueryTradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PaymentCenter.AllPay.com.tw/QueryPeriodTrade", RequestNamespace="http://PaymentCenter.AllPay.com.tw/", ResponseNamespace="http://PaymentCenter.AllPay.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPeriodTrade(long merchantID, string merchantTradeNo) {
            object[] results = this.Invoke("QueryPeriodTrade", new object[] {
                        merchantID,
                        merchantTradeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPeriodTradeAsync(long merchantID, string merchantTradeNo) {
            this.QueryPeriodTradeAsync(merchantID, merchantTradeNo, null);
        }
        
        /// <remarks/>
        public void QueryPeriodTradeAsync(long merchantID, string merchantTradeNo, object userState) {
            if ((this.QueryPeriodTradeOperationCompleted == null)) {
                this.QueryPeriodTradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPeriodTradeOperationCompleted);
            }
            this.InvokeAsync("QueryPeriodTrade", new object[] {
                        merchantID,
                        merchantTradeNo}, this.QueryPeriodTradeOperationCompleted, userState);
        }
        
        private void OnQueryPeriodTradeOperationCompleted(object arg) {
            if ((this.QueryPeriodTradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPeriodTradeCompleted(this, new QueryPeriodTradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateTradeCompletedEventHandler(object sender, CreateTradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void VerifyOrderByOtpCompletedEventHandler(object sender, VerifyOrderByOtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyOrderByOtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyOrderByOtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ResendOtpCompletedEventHandler(object sender, ResendOtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResendOtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResendOtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryTradeCompletedEventHandler(object sender, QueryTradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PlatformQueryTradeCompletedEventHandler(object sender, PlatformQueryTradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlatformQueryTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlatformQueryTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryPeriodTradeCompletedEventHandler(object sender, QueryPeriodTradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPeriodTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPeriodTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591